#!/bin/sh
#
# AUTHOR
# Valerio Casalino <casalinovalerio.cv@gmail.com>
#
# DESCRIPTION
# wordlistctl - Fetch, install and search wordlist archives from websites.
# Script to fetch, install, update and search wordlist archives from websites
# offering wordlists with more than 6300 wordlists available.
#
# LICENSE
# GPLv3, this is a derived work from the Black Arch team, more specifically,
# as stated in the main document, from sepehrdad@blackarch.org
# ====> https://github.com/BlackArch/wordlistctl

### Global variables
_WORDLIST_PATH="/usr/share/wordlists"
_ARCHIVE="$_WORDLIST_PATH/archive.json"
_NEEDED_PKGS="curl jq"

### Output functions
errmsg() { printf "\e[31m==>\e[0m %s\\n" "$1"; }
insmsg() { printf "\e[32m==>\e[0m %s\\n" "$1"; }
warmsg() { printf "\e[33m==>\e[0m %s\\n" "$1"; }

### Functions
# Check if packages are installed in the system
are_installed() { command -v $@ >/dev/null || { errmsg "Please, install $@"; return 1; }; }
# Check if an internet connection is avaliable
pc_connected() { ping -c 1 "8.8.8.8" >/dev/null || { errmsg "An internet connection is necessary"; return 1; }; }
# Check if script is executed as root
is_root() { [ "$USER" = "root" ] || { errmsg "Run as root please"; return 1; }; }
# Download json archive
get_archive() { curl -sSLf "https://wl.casalino.xyz/archive.json" > "$ARCHIVE"; }
$_WORDLIST_PATi
### Actual script
# Preliminary checks
is_root && are_installed $_NEEDED_PKGS && pc_connected || exit 1
[ ! -f "$_ARCHIVE" ] && warmsg "Downloading archive.json" && get_archive || exit 1
# Getting user input
_options=$( jq '[.[].group] | unique | tostring' "$_ARCHIVE" | sed "s/\"//g;s/\[//g;s/\]//g;s/\\\\//g;s/,/\n/g" )
printf "%s" "$_options" | nl && printf "Select group: " && read -r _choice
_wordlists=$(printf "%s" "$_options" | sed "${_choice}q;d" | xargs -I "{}" jq "with_entries(.value |= (. | select(.group==\"{}\"))) | del(.[] | nulls) | keys[] as \$k | \"\(\$k) (\(.[\$k].size))\"" "$_ARCHIVE" | sed "s/\"//g")
unset _choice
printf "%s" "$_wordlists" | nl && printf "Select wordlist: " && read -r _choice
printf "%s" "$_wordlists" | sed "${_choice}q;d" | xargs -I "{}" jq ".{}.url" "$ARCHIVE" | xargs -I "{}" wget -O "$_WORDLIST_PATH" "{}"
